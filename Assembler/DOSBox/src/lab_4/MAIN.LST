Turbo Assembler	 Version 2.01	     01/05/24 00:38:11	    Page 1
main.ASM



      1				     ; Лабораторная	работа 4 Вариант -	8
      2				     ; Найти и вывести X
      3				     ; X = (A *	B - C *	D)^2
      4				     ; Когда
      5				     ; A = 0Fh
      6				     ; B = 14
      7				     ; C = 10h
      8				     ; D = 4
      9
     10	0000			     Data SEGMENT
     11	0000  0F			 A DB 0Fh
     12	0001  0E			 B DB 14
     13	0002  10			 C DB 10h
     14	0003  04			 D DB 4
     15	0004			     Data Ends
     16
     17	0000			     Ourstack SEGMENT Stack
     18	0000  0100*(??)			 DB 100h DUP (?)
     19	0100			     Ourstack Ends
     20
     21				     ASSUME CS:Code, DS:Data, SS:Ourstack
     22
     23	0000			     Code SEGMENT
     24	0000			     Start:
     25	0000  B8 0000s			 mov AX, Data
     26	0003  8E D8			 mov DS, AX ; загрузили сегмент	с данными
     27
     28					;Вычисление 'E' = A *	B
     29	0005  33 C0			 xor AX, AX ; очищяем регистр AX
     30	0007  A0 0000r			 mov AL, A ; записываем в младший байт AL	регистра AX	    +
     31				     значение A
     32	000A  F6 26 0001r		 mul B	     ; AX = AL * B = 'E'
     33	000E  50			 push AX ; запоминаем	результат 'E'
     34
     35					 ;Вычисление 'F' = С	* D
     36	000F  33 C0			 xor AX, AX ; очищяем регистр AX
     37	0011  A0 0002r			 mov AL, C ; записываем в младший байт AL	регистра AX	    +
     38				     значение C
     39	0014  F6 26 0003r		 mul D	     ; AX = AL * D = 'F'
     40
     41					 ;Вычисление 'G' = 'E' - 'F'
     42	0018  5B			 pop BX	; достаем результат первого вычисления
     43	0019  2B D8			 SUB BX, AX; ; BX = BX - AX = 'G'
     44
     45					 ;Вычисление G^2
     46	001B  33 C0			 xor AX, AX ; очищяем регистр AX
     47	001D  8B C3			 mov AX, BX; записываем в регистр как операнд тоже	    +
     48				     самое	значение, но с предыдущей операции	(так	как	    +
     49				     работаем со словом, то записываем в AX)
     50	001F  F7 E3			 MUL BX	; AX = AX * BX (так как значения одинаковы, то		    +
     51				     получаем квадрат числа) На выходе имеем запись в DX и +
     52				     в	AX
     53
     54	0021  B4 4C			 mov Ah, 4Ch
     55	0023  CD 21			 int 21h ; прерывание
     56
     57	0025			     Code Ends
Turbo Assembler	 Version 2.01	     01/05/24 00:38:11	    Page 2
main.ASM



     58				     END Start
