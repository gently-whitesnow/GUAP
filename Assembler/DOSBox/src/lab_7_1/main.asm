; CHANGE
;Программа заменяет строчные буквы заглавными в символьной 
;строке и выводит на экран преобразованную строку
;Входные параметры:
;текстовая переменная MYTEXT
.MODEL SMALL
.STACK 256
.DATA
MYTEXT DB 'Our Native Town with Happy People', 13, 10, '$' ;объявляем текстовую переменную
; 13 - возврат каретки(\r), 10 - перевод строки(\n), $ - конец строки
strlen = ($ - MYTEXT) - 3 ; длина строки MYTEXT, 7 где - 3 вычитание символов (13, 10, '$')

.CODE
;основная программа
Start:
    MOV AX, @DATA
    MOV DS, AX ; Инициализация Data

    XOR AX, AX ; очищаем регистр AX
    LEA BX, MYTEXT ; загружаем адрес строки в регистр BX
    MOV CX, strlen ; инициализируем счетчик CorrectHandler

CorrectHandler: ; функция вызывающая процедуру коррекции, если символ находится в промещутке между (a-z)
    MOV AH, [BX] ; загрузка значения находящегося по адресу в регистр AH
    CMP AH, 61h ; сравнение значения с 97d элементом 'a' из ASCII таблицы
    JB MoveCaretCounter ; Если значение меньше a, то увеличиваем счетчик каретки
    CMP AH, 7Ah ; сравнение значения с 122d элементом 'z' из ASCII таблицы
    JA MoveCaretCounter ; Если значение больше z, то увеличиваем счетчик каретки
    CALL ToUpperCase ; Попали в диапазон a-z поэтому преобразовываем букву

MoveCaretCounter: ; функция инкремента каретки данных
    INC BX
    
    LOOP CorrectHandler ; уменьшает счетчик цикла CX и выполняет операцию, если CX = 0, то выходит из цикла
    
    LEA DX, MYTEXT ; вывод строки в консоль
    MOV AH, 09h ; 
    INT 21h ;

    MOV AX, 4C00h ; завершение программы
    INT 21h ;

; процедура коррекции кода символа
; выставляет в ноль 6 бит регистра AH, что превращает 
; строчную букву в заглавную
ToUpperCase PROC NEAR 
        AND AH, 0DFh ; 0DFh - 1 1 0 1 1 1 1 1
        MOV [BX], AH ; записываем полученное значение 
    RET
ToUpperCase ENDP
END Start
