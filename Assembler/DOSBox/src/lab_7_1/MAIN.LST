Turbo Assembler	 Version 2.01	     01/05/24 14:46:17	    Page 1
main.ASM



      1				     ; CHANGE
      2				     ;Программа заменяет строчные буквы заглавными в	    +
      3				     символьной
      4				     ;строке и выводит на экран преобразованную строку
      5				     ;Входные параметры:
      6				     ;текстовая переменная MYTEXT
      7	0000			     .MODEL SMALL
      8	0000			     .STACK 256
      9	0000			     .DATA
     10	0000  4F 75 72 20 4E 61	74+  MYTEXT DB 'Our Native Town	with Happy People', 13,	10, '$'	;объявляем		    +
     11	      69 76 65 20 54 6F	77+  текстовую	переменную
     12	      6E 20 77 69 74 68	20+
     13	      48 61 70 70 79 20	50+
     14	      65 6F 70 6C 65 0D	0A+
     15	      24
     16				     ; 13 - возврат каретки(\r), 10 - перевод строки(\n), $ - конец +
     17				     строки
     18	      =	0021		     strlen = ($ - MYTEXT) - 3 ; длина строки MYTEXT, 7 где - 3 вычитание    +
     19				     символов (13, 10, '$')
     20
     21	0024			     .CODE
     22				     ;основная программа
     23	0000			     Start:
     24	0000  B8 0000s			 MOV AX, @DATA
     25	0003  8E D8			 MOV DS, AX ; Инициализация Data
     26
     27	0005  33 C0			 XOR AX, AX ; очищаем регистр AX
     28	0007  BB 0000r			 LEA BX, MYTEXT	; загружаем адрес	строки в	регистр BX
     29	000A  B9 0021			 MOV CX, strlen	; инициализируем счетчик CorrectHandler
     30
     31	000D			     CorrectHandler: ; функция вызывающая процедуру коррекции,   +
     32				     если символ находится в промещутке между (a-z)
     33	000D  8A 27			 MOV AH, [BX] ;	загрузка значения находящегося по	адресу+
     34				     в	регистр AH
     35	000F  80 FC 61			 CMP AH, 61h ; сравнение значения с 97d элементом 'a' из ASCII +
     36				     таблицы
     37	0012  72 08			 JB MoveCaretCounter ; Если	значение меньше a, то увеличиваем+
     38				     счетчик каретки
     39	0014  80 FC 7A			 CMP AH, 7Ah ; сравнение значения с 122d элементом 'z' из ASCII+
     40				     таблицы
     41	0017  77 03			 JA MoveCaretCounter ; Если	значение больше z, то увеличиваем+
     42				     счетчик каретки
     43	0019  E8 000F			 CALL ToUpperCase ; Попали в диапазон a-z поэтому			    +
     44				     преобразовываем букву
     45
     46	001C			     MoveCaretCounter: ; функция	инкремента каретки данных
     47	001C  43			 INC BX
     48
     49	001D  E2 EE			 LOOP CorrectHandler ; уменьшает счетчик цикла CX и выполняет+
     50				     операцию, если	CX = 0,	то выходит из цикла
     51
     52	001F  BA 0000r			 LEA DX, MYTEXT	; вывод строки в консоль
     53	0022  B4 09			 MOV AH, 09h ;
     54	0024  CD 21			 INT 21h ;
     55
     56	0026  B8 4C00			 MOV AX, 4C00h ; завершение программы
     57	0029  CD 21			 INT 21h ;
Turbo Assembler	 Version 2.01	     01/05/24 14:46:17	    Page 2
main.ASM



     58
     59				     ; процедура коррекции кода символа
     60				     ; выставляет в ноль	6 бит регистра AH, что превращает
     61				     ; строчную	букву в заглавную
     62	002B			     ToUpperCase PROC NEAR
     63	002B  80 E4 DF			     AND AH, 0DFh ; 0DFh - 1 1 0 1 1 1 1 1
     64	002E  88 27			     MOV [BX], AH ; записываем полученное значение
     65	0030  C3			 RET
     66	0031			     ToUpperCase ENDP
     67				     END Start
