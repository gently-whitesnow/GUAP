using System;
using System.Collections.Generic;
using System.Globalization;

namespace FileDatabase;

public static class Printer
{
    
    public static void Error(string humanReadableString)
    {
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine(humanReadableString);
        Console.ResetColor();
    }
        
    public static void Warning(string humanReadableString)
    {
        Console.ForegroundColor = ConsoleColor.Yellow;
        Console.WriteLine(humanReadableString);
        Console.ResetColor();
    }
        
    public static void Success(string humanReadableString)
    {
        Console.ForegroundColor = ConsoleColor.Green;
        Console.WriteLine(humanReadableString);
        Console.ResetColor();
    }
        
    public static void Prompt(string humanReadableString)
    {
        Console.ForegroundColor = ConsoleColor.Cyan;
        Console.WriteLine(humanReadableString);
        Console.ResetColor();
    }
        
    public static void Speech(string humanReadableString)
    {
        Console.ResetColor();
        Console.WriteLine(humanReadableString);
    }
        
    public static void Step(string humanReadableString)
    {
        Console.ForegroundColor = ConsoleColor.Blue;
        Console.WriteLine(humanReadableString);
        Console.ResetColor();
    }
    
    public static void Data(string humanReadableString)
    {
        Console.ForegroundColor = ConsoleColor.DarkGray;
        Console.WriteLine(humanReadableString);
        Console.ResetColor();
    }
    
    public static void PrintHeader()
    {
        var formattedId = "| " + "–ò–¥".PadRight(5);
        var formattedTrainNumber = " | " + "–ù–æ–º–µ—Ä –ø–æ–µ–∑–¥–∞".PadRight(15);
        var formattedPointName = " | " + "–ü—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è".PadRight(20);
        var formattedDepartureTime = " | " + "–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è".PadRight(20) + " |";
        var additionalInfo = " üîº - –í–≤–µ—Ä—Ö, üîΩ - –í–Ω–∏–∑";

        Speech($"{formattedId}{formattedTrainNumber}{formattedPointName}{formattedDepartureTime}{additionalInfo}");
        if (Cursor.ViewRange.Min != 0)
            Prompt(".........................................................................");
    }

    public static void PrintData(List<Train> data)
    {
        for (int i = Cursor.ViewRange.Min; i <= Cursor.ViewRange.Max; i++)
        {
            var formattedId = "| " + data[i].Id.ToString().PadRight(5);
            var formattedTrainNumber = " | " + data[i].TrainNumber.PadRight(15);
            var formattedPointName = " | " + data[i].PointName.PadRight(20);
            var formattedDepartureTime = " | " + data[i].DepartureTime.ToString("g",CultureInfo.GetCultureInfo("de-DE")).PadRight(20) + " |";

            if (i == Cursor.Position)
                Step($"{formattedId}{formattedTrainNumber}{formattedPointName}{formattedDepartureTime}");
            else
                Data($"{formattedId}{formattedTrainNumber}{formattedPointName}{formattedDepartureTime}");
        }
    }

    public static  void PrintFooter()
    {
        if (Cursor.ViewRange.Max != Cursor.MaxBorder)
            Prompt(".........................................................................");
        Console.WriteLine();

        Step("–î–ª—è –°–û–†–¢–ò–†–û–í–ö–ò –Ω–∞–∂–º–∏—Ç–µ 'O'");
        if (Sorter.IsSorting)
        {
            Step("'1' - –ò–¥\t '2' - –ù–æ–º–µ—Ä –ø–æ–µ–∑–¥–∞\t '3' - –ü—É–Ω–∫—Ç –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è\t '4' - –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è \t 'D' - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏");
        }
        else
        {
            Step("–î–ª—è –£–î–ê–õ–ï–ù–ò–Ø –Ω–∞–∂–º–∏—Ç–µ 'D'");
        }

        if (!string.IsNullOrEmpty(Sorter.SortingInfo))
        {
            var orderingInfo = Sorter.Descending ? "–£–±—ã–≤–∞—é—â–∞—è" : "–í–æ–∑—Ä–∞—Å—Ç–∞—é—â–∞—è";
            Warning(orderingInfo + $" {Sorter.SortingInfo}");
        }

        Step("–î–ª—è –ü–û–ò–°–ö–ê –Ω–∞–∂–º–∏—Ç–µ 'F'");
        if (Filter.IsFiltering)
        {
            Step("'1' - –ò–¥\t '2' - –ù–æ–º–µ—Ä –ø–æ–µ–∑–¥–∞\t '3' - –ü—É–Ω–∫—Ç –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è\t '4' - –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è");
        }

        if (Filter.IsNotEmpty())
            Warning($"–ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã: {Filter.GetActiveFilters()}");
        
        Step("–î–ª—è –ò–ó–ú–ï–ù–ï–ù–ò–Ø –Ω–∞–∂–º–∏—Ç–µ 'C'");
        if (Collector.IsChanging)
        {
            Step("'2' - –ù–æ–º–µ—Ä –ø–æ–µ–∑–¥–∞\t '3' - –ü—É–Ω–∫—Ç –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è\t '4' - –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è");
        }
        Step("–î–ª—è –î–û–ë–ê–í–õ–ï–ù–ò–Ø –Ω–∞–∂–º–∏—Ç–µ 'A'");
        Step("–î–ª—è –°–û–•–†–ê–ù–ï–ù–ò–Ø –Ω–∞–∂–º–∏—Ç–µ 'S'");
        
        Console.WriteLine();
        Console.WriteLine("–ù–∞–∂–º–∏—Ç–µ 'R' –¥–ª—è —Å–±—Ä–æ—Å–∞");
        Console.WriteLine("–ù–∞–∂–º–∏—Ç–µ 'Q' –¥–ª—è –≤—ã—Ö–æ–¥–∞");
    }
}